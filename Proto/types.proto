syntax = "proto3";

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";

package types;

enum protocol {
	kInvalid				= 0x0;
	kHello					= 0x1001;
	kPingReq				= 0x1002;
	kPingRes				= 0x1003;
	kContentReadyReq		= 0x1004;
	kContentReadyRes		= 0x1005;
	kHelloClient 			= 0x1006;
	kHelloServer 			= 0x1007;
	kDisconnectAlertNotify  = 0x1008;
	kRegisterServerReq      = 0x1009;
	kRegisterServerRes 		= 0x100A;
	kServerPingReq 			= 0x100B;
	kServerPingRes			= 0x100C;
	kHelloClientAck 		= 0x100D;
	kWorldServerListReq		= 0x100E;
	kWorldServerListRes     = 0x100F;
	kCreateCharacterReq 	= 0x1010;
	kCreateCharacterRes 	= 0x1011;
	kGetCharacterListReq	= 0x1012;
	kGetCharacterListRes	= 0x1013;
	kPlayStartCharacterReq	= 0x1014;
	kPlayStartCharacterRes  = 0x1015;
	kHelloWorldServer 		= 0x1016;
	kHelloWorldClient		= 0x1017;
	kClientMoveReq 			= 0x1018;
	kClientMoveRes			= 0x1019;
	kClientEnterMapNotify 	= 0x1020;
	kClientLeaveMapNotify   = 0x1021;
	kOtherClientEnterNotify	= 0x1022;
	kOtherClientLeaveNotify = 0x1023;
	kClientEnterMapReq		= 0x1024;
	kClientEnterMapRes 		= 0x1025;
	kOtherClientMoveNotify  = 0x1026;
	kServerTickIntervalChangedNotify = 0x1027;
	kChangeServerTickIntervalReq 	= 0x1028;
	kChangeServerTickIntervalRes 	= 0x1029;
	kClientActionReq 		= 0x102A;
	kClientActionRes		= 0x102B;
	kOtherClientActionNotify     = 0x102C;
	kSectionOwnershipChangedNotify  = 0x102D;
	kSpawnNpcOnSectionReq 	= 0x102E;
	kSpawnNpcOnSectionRes	= 0x102F;
	kSpawnNpcOnSectionNotify = 0x1030;
	kSpawnProjectileOnSectionReq = 0x1031;
	kSpawnProjectileOnSectionRes = 0x1032;
	kSpawnProjectileOnSectionNotify = 0x1033;
	kHitObjectByProjectileReq 	= 0x1034;
	kHitObjectByProjectileRes 	= 0x1035;
	kHitObjectByProjectileNotify = 0x1036;
	kDespawnNpcOnSectionNotify = 0x1037;
	kDespawnProjectileOnSectionNotify = 0x1038;
	kDebugSimulationPositionNotify	= 0x1039;
}

extend google.protobuf.MessageOptions {
	optional protocol message_id = 1001;
}

enum Result {
	kSuccess = 0;
	kUnknown = 1;
	kInvalidRequest = 2;
	kInvalidParameter = 3;
	kNotFound = 4;
	kInternalError = 5;
	kDatabaseError = 6;
	kDuplicatedName = 7;
	kAccessTokenExpired = 8;
	kInvalidServerId = 9;
	kInvalidCharacterId = 10;
	kInvalidUserId = 11;
	kInvalidCooldown = 12;
	kUnauthorized =13;
	kInvalidSpeed = 14;
	kInvalidPosition = 15;
	kInvalidRotation = 16;
}

enum Color {
	kRed = 0;
	kBlue = 1;
	kGreen = 2;
	kYellow = 3;
	kWhite = 4;
}

enum DebugShape {
	kSphere = 0;
	kBox = 1;
	kCapsule = 2;
}

enum ServerType {
	kUnknownServer = 0;
	kDedicatedServer = 1;
	kWorldServer = 2;
	kLobbyServer = 3;
}

message ServerInfo {
	int32 server_id = 1;
	string server_address = 2;
	int32 current_player_num = 4;
}

message CharacterInfo {
	int64 character_id = 1;
	string character_name = 2;
	int64 account_id = 3;
	int32 server_id = 4;
	int32 level = 5;
	int64 exp = 6;
	google.protobuf.Timestamp last_played = 7;
	google.protobuf.Timestamp created_at = 8;
}

message Vector3 {
	float x = 1;
	float y = 2;
	float z = 3;
}

message Vector2 {
	float x = 1;
	float y = 2;
}

message Quat {
	float x = 1;
	float y = 2;
	float z = 3;
	float w = 4;
}

message Rotator {
	float roll = 1;
	float pitch = 2;
	float yaw = 3;
}

message Pose {
	Vector3 location = 1;
	Rotator rotation = 2;
}

message Transform {
	Vector3 location = 1;
	Rotator rotation = 2;
	Vector3 scale = 3;
}

message AxisAndAngle {
	float x = 1;
	float y = 2;
	float z = 3;
	float angle_in_rad = 4;
}

message CharacterPose {
	Vector3 position = 1;
	Rotator rotation = 2;
	Vector3 velocity = 3;
	Vector3 acceleration = 4;
	AxisAndAngle angular_velocity = 6;
	Rotator aim_rotation = 7;
	AxisAndAngle aim_angular_velocity = 8;
	float net_delay_ms = 9;
}

message NpcInfo {
	Pose pose = 1;
	int64 object_id = 2;
	int64 current_hp = 3;
	int32 spawner_id = 4;
}

message NpcSpawnInfo {
	Pose pose = 1;
	int32 spawner_id = 2;
}

message ProjectileInfo {
	Pose pose = 1;
	int64 object_id = 2;
	float initial_speed = 3;
	Vector3 direction = 4;
	Vector3 velocity = 5;
	int64 action_id = 6;
	google.protobuf.Timestamp action_time = 7;
	int64 trigger_id = 8;
}

message PcInfo {
	int64 character_id = 1;
	int32 server_id = 2;
	types.CharacterPose character_pose = 3;
	int64 object_id = 4;
}

message SectionInfo {
	uint64 section_id = 1;
	int32 map_uid = 2;
	repeated NpcInfo npc_infos = 3;
	repeated PcInfo pc_infos = 4;
	repeated ProjectileInfo projectile_infos = 5;
	int64 owner_character_id = 6;
}

message JumpAction {
	bool is_jump = 1;
}

message MovementChanged {
	sint32 movement_mode = 1;
}

message SprintAction {
	bool is_sprint = 1;
}

message BaseAttackAction {
	float client_timestamp = 1;
}

message ClientAction {
	oneof ClientActionField {
		types.JumpAction jump_action = 1;
		types.SprintAction sprint_action = 2;
		types.MovementChanged movement_changed_action = 3;
		types.BaseAttackAction base_attack_action = 4;
	}
}

message Sphere {
	float radius = 1;
}

message Box {
	Vector3 extent = 1;
}

message Capsule {
	float half_height = 1;
	float radius = 2;
}

message DebugShapeInfo {
	oneof DebugShapeInfoField {
		types.Sphere sphere = 1;
		types.Box box = 2;
		types.Capsule capsule = 3;
	}
}


